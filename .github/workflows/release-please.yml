name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  actions: write
  checks: write
  statuses: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

# This tool is designed for Windows environments only
jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: rust
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
          token: ${{ secrets.GITHUB_TOKEN }}

  build-and-upload:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: windows-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: windows-cargo-index-${{ hashFiles('**/Cargo.lock') }}

    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: windows-x86_64-pc-windows-msvc-cargo-build-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --release --target x86_64-pc-windows-msvc

    - name: Upload Windows binary to release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.release-please.outputs.tag_name }}
        files: target/x86_64-pc-windows-msvc/release/installer-analyzer.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


