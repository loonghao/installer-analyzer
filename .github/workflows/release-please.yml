name: Release Please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write
  repository-projects: write

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Release Please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: rust
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json
          skip-github-release: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: false

  build-and-upload:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "release"
        cache-targets: true
        save-if: true

    - name: Build release binary
      run: cargo build --release --target x86_64-pc-windows-msvc

    - name: Upload Windows binary to release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.release-please.outputs.tag_name }}
        files: target/x86_64-pc-windows-msvc/release/installer-analyzer.exe
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
